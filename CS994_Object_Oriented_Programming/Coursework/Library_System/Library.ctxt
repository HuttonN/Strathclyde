#BlueJ class context
comment0.target=Library
comment0.text=\n\ Represents\ the\ library\ system\ that\ manages\ a\ catalogue\ of\ resources,\n\ including\ physical\ books\ and\ electronic\ resources.\ \n\ \n\ Provides\ functionality\ for\ adding,\ removing,\ lending,\ and\ searching\ resources.\n\ \n\ @author\ Neil\ Hutton\n\ @version\ 1.0\n
comment1.params=
comment1.target=Library()
comment1.text=\n\ Constructs\ a\ new\ Library\ object\ with\ an\ empty\ catalogue.\n
comment10.params=position
comment10.target=void\ removeResourceAtPosition(int)
comment10.text=\n\ Removes\ a\ resource\ at\ a\ specific\ position\ in\ the\ catalogue.\n\ \n\ @param\ position\ the\ position\ of\ the\ resource\ to\ remove\n
comment11.params=
comment11.target=void\ printAvailableBooks()
comment11.text=\n\ Prints\ the\ details\ of\ all\ available\ physical\ books\ in\ the\ catalogue.\n
comment12.params=
comment12.target=int\ getResourceCount()
comment12.text=\n\ Gets\ the\ total\ number\ of\ resources\ in\ the\ catalogue.\n\ \n\ @return\ the\ number\ of\ resources\ in\ the\ catalogue\n
comment13.params=book\ member
comment13.target=void\ lendBook(PhysicalBook,\ LibraryMember)
comment13.text=\n\ Lends\ a\ physical\ book\ to\ a\ library\ member.\n\ \n\ @param\ book\ \ \ the\ book\ to\ lend\n\ @param\ member\ the\ member\ to\ lend\ the\ book\ to\n
comment14.params=book\ recordDamage\ damageDescription
comment14.target=void\ acceptBookReturn(PhysicalBook,\ boolean,\ java.lang.String)
comment14.text=\n\ Processes\ the\ return\ of\ a\ physical\ book.\n\ Records\ damage\ if\ applicable.\n\ \n\ @param\ book\ \ \ \ \ \ \ \ \ \ \ \ \ the\ book\ to\ return\n\ @param\ recordDamage\ \ \ \ \ true\ if\ damage\ is\ to\ be\ recorded,\ false\ otherwise\n\ @param\ damageDescription\ the\ description\ of\ the\ damage\ (if\ applicable)\n
comment2.params=resource
comment2.target=void\ addResource(LibraryResource)
comment2.text=\n\ Adds\ a\ new\ resource\ to\ the\ library's\ catalogue.\n\ \n\ @param\ resource\ the\ resource\ to\ add\n
comment3.params=title
comment3.target=void\ searchByTitle(java.lang.String)
comment3.text=\n\ Searches\ for\ resources\ in\ the\ catalogue\ by\ title\ (case-insensitive).\n\ \n\ @param\ title\ the\ title\ to\ search\ for\n
comment4.params=surname
comment4.target=void\ searchByAuthorSurname(java.lang.String)
comment4.text=\n\ Searches\ for\ physical\ books\ in\ the\ catalogue\ by\ the\ author's\ surname\ (case-insensitive).\n\ \n\ @param\ surname\ the\ author's\ surname\ to\ search\ for\n
comment5.params=resource\ newFirstName
comment5.target=void\ editAuthorFirstName(LibraryResource,\ java.lang.String)
comment5.text=\n\ Updates\ the\ author's\ first\ name\ for\ a\ specified\ physical\ book.\n\ \n\ @param\ resource\ \ \ \ \ the\ resource\ to\ update\ (must\ be\ a\ physical\ book)\n\ @param\ newFirstName\ the\ new\ first\ name\ of\ the\ author\n
comment6.params=resource
comment6.target=boolean\ containsResource(LibraryResource)
comment6.text=\n\ Checks\ if\ a\ resource\ exists\ in\ the\ catalogue.\n\ \n\ @param\ resource\ the\ resource\ to\ check\n\ @return\ true\ if\ the\ resource\ exists,\ false\ otherwise\n
comment7.params=
comment7.target=void\ printPhysicalBooks()
comment7.text=\n\ Prints\ the\ details\ of\ all\ physical\ books\ in\ the\ catalogue.\n
comment8.params=
comment8.target=void\ printElectronicResources()
comment8.text=\n\ Prints\ the\ details\ of\ all\ electronic\ resources\ in\ the\ catalogue.\n
comment9.params=resource
comment9.target=void\ removeResource(LibraryResource)
comment9.text=\n\ Removes\ a\ resource\ from\ the\ catalogue.\n\ \n\ @param\ resource\ the\ resource\ to\ remove\n
numComments=15
