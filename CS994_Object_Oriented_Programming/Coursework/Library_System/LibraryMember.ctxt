#BlueJ class context
comment0.target=LibraryMember
comment0.text=\n\ Represents\ a\ library\ member\ who\ can\ borrow\ and\ return\ physical\ books.<p>\n\ \n\ Each\ library\ member\ has\ a\ unique\ ID\ and\ a\ list\ of\ borrowed\ books.<p>\n\ \n\ Provides\ methods\ for\ borrowing,\ returning,\ and\ viewing\ borrowed\ books.<p>\n\ \n\ <b>Version\ 1.1\ Notes\:</b><br>\n\ -\ Added\ the\ {@code\ getDetails}\ method\ to\ generate\ member\ details\ as\ a\ String.<br>\n\ -\ Modified\ the\ {@code\ printDetails}\ method\ to\ use\ {@code\ getDetails}\ for\ better\ testability<br>\n\ \n\ \n\ @author\ Neil\ Hutton\n\ @version\ 1.1\n
comment1.params=id
comment1.target=LibraryMember(int)
comment1.text=\n\ Constructs\ a\ new\ LibraryMember\ with\ the\ specified\ ID.\n\ \n\ @param\ id\ the\ unique\ ID\ of\ the\ library\ member\n
comment2.params=
comment2.target=int\ getId()
comment2.text=\n\ Gets\ the\ ID\ of\ the\ library\ member.\n\ \n\ @return\ the\ ID\ of\ the\ library\ member\n
comment3.params=id
comment3.target=void\ setId(int)
comment3.text=\n\ Sets\ the\ ID\ of\ the\ library\ member.\n\ \n\ @param\ id\ the\ new\ ID\ of\ the\ library\ member\n
comment4.params=
comment4.target=java.util.List\ getBorrowedBooks()
comment4.text=\n\ Gets\ the\ list\ of\ books\ currently\ borrowed\ by\ the\ library\ member.\n\ \n\ @return\ a\ copy\ of\ the\ list\ of\ borrowed\ books\ for\ immutability\n
comment5.params=book
comment5.target=void\ addBorrowedBook(PhysicalBook)
comment5.text=\n\ Adds\ the\ specified\ book\ to\ the\ member's\ list\ of\ borrowed\ books.<p>\n\ \n\ This\ method\ does\ not\ handle\ broader\ lending\ logic,\ such\ as\ checking\ whether\ \n\ the\ book\ is\ already\ borrowed\ by\ another\ member\ or\ is\ available\ in\ the\ library.\ Such\ \n\ validation\ is\ performed\ by\ the\ {@link\ Library\#lendBook}\ method.<p>\n\ \n\ This\ method\ only\ ensures\ that\ the\ book\ is\ added\ to\ the\ list\ if\ it\ is\ not\ already\ present.<p>\n\ \n\ @param\ book\ the\ book\ to\ add\ to\ the\ borrowed\ books\ list\n
comment6.params=book
comment6.target=void\ removeBook(PhysicalBook)
comment6.text=\n\ Removes\ the\ specified\ book\ from\ the\ member's\ list\ of\ borrowed\ books.<p>\n\ \n\ This\ method\ does\ not\ validate\ whether\ the\ book\ is\ being\ returned\ to\ the\ library\ \n\ or\ if\ it\ belongs\ to\ this\ library's\ catalog.\ Such\ logic\ is\ handled\ in\ the\ \n\ {@link\ Library\#acceptBookReturn}\ method.<p>\n\ \n\ This\ method\ only\ ensures\ that\ the\ book\ is\ removed\ from\ the\ list\ if\ it\ is\ currently\ present.\n\ \n\ @param\ book\ the\ book\ to\ remove\ from\ the\ borrowed\ books\ list\n
comment7.params=
comment7.target=int\ numberOfBorrowedBooks()
comment7.text=\n\ Gets\ the\ number\ of\ books\ currently\ borrowed\ by\ the\ library\ member.\n\ \n\ @return\ the\ number\ of\ borrowed\ books\n
comment8.params=
comment8.target=java.lang.String\ getDetails()
comment8.text=\n\ Generates\ a\ string\ containing\ the\ details\ of\ the\ library\ member.\n\ \n\ @return\ a\ string\ representation\ of\ the\ library\ member's\ details\n
comment9.params=
comment9.target=void\ printDetails()
comment9.text=\n\ Prints\ the\ details\ of\ the\ library\ member\ to\ the\ console.\n
numComments=10
